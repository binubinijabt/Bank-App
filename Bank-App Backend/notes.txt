

                    BACKEND FOR BANK APPLICATION

    1. Create Package.json file - npm init
    2. install Express - npm i express
    3. Create index.js file
              
              
              //Create server using express

              //1.import express

                  const express = require('express');

              //2.create server using express

                   const server = express()

              //3.setup port for server application(backend run)

                    server.listen(5000,()=>{
                           console.log('server listening on port 5000');
                    })

    5. Install cors (Cross Origin Resource Sharing ) :- npm i cors
                    :- To share data with different applications.
                    :- "CORS is a node.js package for providing a Connect/Express middleware 
                        that can be used to enable CORS with various options".
    
    6. Use CORS in server application

    7. API call or API request

      // register
      //login

      FRONTEND -> request -> Internet -> http method -> API -> BACKEND 


    8. To parse json data to js in server app - use express.json()
    9. To resolve client request in server(api fetching)
          
          server_app_name.http_method('path'.callback function)

          callback function is used to define logic to resolve client request and send response.
        
    10.DATABASE CONNECTION WITH MODE

       i)   Node connect with mongodb - npm i mongoose
       ii)  Create a service folder in backend,create a db.json file
       iii) import mongoose and define connection string
       iv)  create  a model and schema for storing data in the DATABASE
       v)   export the collection
       vi)  logic to resolve - create a file logic.js in service folder
       vii) in index.js -to resolve client request in server
       viii) test client request in postman

    11.Authorization using Jsonwebtoken(JWT token)
        1)Install jsonweb token -> npm i jsonwebtoken    
        2)Generate token -> using sign()
    Using JWT token, generate token for user who loggined successful
    logic: login successful? + sign() method generate token
        3) Import jsonwebtoken in logic.js  
        4) Generate token for user who loggined successful in logic.js
        5)set token in FRONTEND
        6)verify token -> when client request after successful in login
                getBalance + add token to the header

                getBalance request -> 
                                       1) header - token 
                                       2) body   - acno 
        7)Middleware  
          --> Control request-response cycle  
          --> function(req,res,next)
             Types of middleware
                 1) Application specific middleware
                 2) Router specific middleware                            












